/*
-----------------------------------------------------------------------------------
- 완전 이진 트리. 의 한 형태로서, 
- 힙속성(최대 힙, 최소 힙)을 만족하는 자료구조

- 최대 힙 속성 : 부모 노드 키값이, 자식 노드 키값. 보다 크거나 같다
- 최소 힙 속성 : 부모 노드 키값이, 자식 노드 키값. 보다 작거나 같다
- 다른 말로 해서, 왼쪽, 오른쪽 자식 노드간의 크기 비교는 일어나지 않는다 

< 힙 >
- 루트 노드는 항상 최댓값, 최솟값을 갖는다.
- 부모 ~ 자식. 사이의 크기 관계만 있고, 왼쪽 자식 ~ 오른쪽 자식 사이의 크기 관계는 없다.
- 완전 이진 트리 --> 높이는 log n

< 시간 복잡도 >
- 최대값, 최소값 참조 : O(1)
- 원소 삽입, 삭제 O(log N)

-----------------------------------------------------------------------------------
                    이진 탐색 트리          !=        완전 이진 트리 (힙)
원소 중복            중복 불가능                        중복 가능
원소 정렬 여부       정렬됨                             정렬 안된
빠른 원소 탐색       지원 : 이진탐색(log n)             미지원 ( 순차 탐색 ) 
원소 삽입 또는 삭제  O(log n) || O(n = 한쪽 치우쳐짐)   O(log n)   

-----------------------------------------------------------------------------------
>> 힙에 원소 삽입

- 1. 힙의 맨 마지막에 새로운 원소 값을 갖는 노드를 추가한다
- 2. 새로 삽입한 노드와 부모 노드를 서로 비교하여, 힙 속성을 만족하지 않으면
현재 노드와 부모 노드를 교환 한다.
그리고 부모 노드에서 이 작업을 반복한다 (heapify_up)
-----------------------------------------------------------------------------------
>> 힙에 원소 삭제

- 1. 힙의 맨 마지막 노드 값을 루트 노드로 복사하고 , 
맨 마지막 노드를 삭제한다.
- 2. 루트 노드와 두 자식 노드를 비교하여, 힙 속성을 만족하지 않으면
두 자식 노드 중에서 더 큰 노드와 서로 교환한다.
교환한 자식 노드에서 이 작업을 반복한다. (heapify_down)

*/